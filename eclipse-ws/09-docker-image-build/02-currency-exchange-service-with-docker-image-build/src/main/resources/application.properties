spring.application.name=currency-exchange
server.port=8000

spring.config.import=optional:configserver:http://localhost:8888

#Enable SQL logging
spring.jpa.show-sql=true

#In memory database H2 connection 
#Access h2 console at http://localhost:8000/h2-console
spring.datasource.url=jdbc:h2:mem:testdb

#For details present in Database
spring.h2.console.enabled=true

#By default data.sql file is executed first before table is created.
#This prevents this from happening. Queries should be allowed to execute only after tables are created first.
spring.jpa.defer-datasource-initialization=true

#Naming server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#Specifying the number of retries for sample-api
resilience4j.retry.instances.sample-api.maxAttempts=5

#Duration between each retry
resilience4j.retry.instances.sample-api.waitDuration=1s

#Time between each subsequent retries takes longer 
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

#First run Zipkin distributed tracing server as docker container
#docker run -p 9411:9411 openzipkin/zipkin:2.23

#Distributed Tracing
#Access Zipkin Distributed Server at http://localhost:9411
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#To Build a docker image, Right click > Run As > Maven Build > and Update goals field to : spring-boot:build-image -DskipTests > Click Run
#Alternatively we can do the same using command line: cd into the project folder > ./mvnw spring-boot:build-image -DskipTests

#To run the built image
#docker run -p 8000:8000 ldeepak/udemy-mastering-microservices-course-currency-exchange-service:0.0.1-SNAPSHOT

#To run using docker compose
#docker-compose up