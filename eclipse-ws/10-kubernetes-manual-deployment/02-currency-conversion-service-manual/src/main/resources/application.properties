# Base version of currency conversion microservice. 
# Without spring cloud features like eureka naming server, API gateway ..etc
# We will use the services provided by Kubernetes

spring.application.name=currency-conversion
server.port=8100

#spring.config.import=optional:configserver:http://localhost:8888

#Naming server
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#First run Zipkin distributed tracing server as docker container
#docker run -p 9411:9411 openzipkin/zipkin:2.23

#Distributed Tracing
#Access Zipkin Distributed Server at http://localhost:9411
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#Deploy to Google Cloud manually
#kubectl create deployment currency-conversion --image=ldeepak/udemy-microservices-currency-conversion-service:0.0.11-SNAPSHOT
#kubectl expose deployment currency-conversion --type=LoadBalancer --port=8100
#kubectl get svc, to get the External IP of the service.
#Execute the request on postman: http://External IP:8100/currency-conversion-feign/from/USD/to/INR/quantity/10

## CHANGE-KUBERNETES
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true